{"version":3,"sources":["UserContext.js","components/ForgotPass.js","components/ResetPass.js","components/Register.js","components/UserLogin.js","components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","React","createContext","UserProvider","children","useState","username","setUserName","useremail","setUserEmail","Provider","value","ForgotPass","invalidEmail","document","querySelector","validEmail","email","setEmail","history","useHistory","handleSubmit","e","a","preventDefault","fetch","method","body","JSON","stringify","headers","connect","status","res","classList","remove","setTimeout","add","push","className","src","alt","onSubmit","htmlFor","type","id","aria-describedby","required","onChange","target","to","ResetPassword","setNewpass","setRepeatpass","useParams","RegisterUser","danger","success","fullname","setFullName","password","setPassword","UserLogin","userInfo","useContext","json","name","Dashboard","localStorage","setItem","getName","getItem","getEmail","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"oNAEIA,EAAcC,IAAMC,gBAETF,IAEFG,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC7B,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,OACE,cAACT,EAAYU,SAAb,CACEC,MAAO,CAAEL,WAAUC,cAAaC,YAAWC,gBAD7C,SAGGL,K,wBCwEQQ,MAlFf,WACE,IAAMC,EAAeC,SAASC,cAAc,YACtCC,EAAaF,SAASC,cAAc,UAC1C,EAA0BV,mBAAS,IAAnC,mBAAOY,EAAP,KAAcC,EAAd,KACMC,EAAUC,cAEVC,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACnBD,EAAEE,iBADiB,SAEGC,MACpB,yDACA,CACEC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEZ,UACvBa,QAAS,CAAE,eAAgB,sBAPZ,OAEbC,EAFa,OAUnBC,EAAOD,GAVY,2CAAH,sDAaZC,EAAS,SAACC,GACK,MAAfA,EAAID,QACNhB,EAAWkB,UAAUC,OAAO,UAC5BC,YAAW,WACTpB,EAAWkB,UAAUG,IAAI,UACzBlB,EAAQmB,KAAK,OACZ,OAEHzB,EAAaqB,UAAUC,OAAO,UAC9BC,YAAW,WACTvB,EAAaqB,UAAUG,IAAI,YAC1B,OAIP,OACE,sBAAKE,UAAU,cAAf,UACE,sBAAMA,UAAU,QAAhB,8BACA,qBAAKA,UAAU,aAAf,SACE,qBACEC,IAAI,iBACJD,UAAU,wBACVE,IAAI,yBAIR,sBAAKF,UAAU,YAAf,UACE,mBAAGA,UAAU,iBAAb,SACE,uBAAOA,UAAU,cAAjB,gDAIF,mBAAGA,UAAU,eAAb,SACE,uBAAOA,UAAU,eAAjB,qEAIF,uBAAMA,UAAU,aAAaG,SAAUrB,EAAvC,UACE,sBAAKkB,UAAU,aAAf,UACE,uBAAOI,QAAQ,aAAf,8BACA,uBACEC,KAAK,QACLL,UAAU,oBACVM,GAAG,aACHC,mBAAiB,YACjBC,UAAQ,EACRC,SAAU,SAAC1B,GAAD,OAAOJ,EAASI,EAAE2B,OAAOtC,aAGvC,wBAAQiC,KAAK,SAASL,UAAU,uBAAhC,sBAIF,qBAAKA,UAAU,QAAf,SACE,cAAC,IAAD,CAAMW,GAAI,IAAKX,UAAU,OAAzB,8BCFKY,MAvEf,WACkB/B,cAAhB,IACA,EAA8Bf,mBAAS,IAAvC,mBAAgB+C,GAAhB,WACA,EAAoC/C,mBAAS,IAA7C,mBAAmBgD,GAAnB,WACMhC,EAAY,uCAAG,WAAOC,GAAP,SAAAC,EAAA,0FAAH,sDACZsB,EAAOS,cAAPT,GAEN,OACE,qCACE,6BAAKA,IACL,sBAAKN,UAAU,cAAf,UACE,mBAAGA,UAAU,QAAb,6BACA,qBAAKA,UAAU,YAAf,SACE,qBACEC,IAAI,iBACJD,UAAU,wBACVE,IAAI,yBAGR,sBAAKF,UAAU,YAAf,UACE,mBAAGA,UAAU,iBAAb,SACE,uBAAOA,UAAU,cAAjB,wDAIF,mBAAGA,UAAU,eAAb,SACE,uBAAOA,UAAU,eAAjB,mEAIF,mBAAGA,UAAU,sBAAb,SACE,uBAAOA,UAAU,cAAjB,6DAIF,uBAAMA,UAAU,aAAaG,SAAUrB,EAAvC,UACE,sBAAKkB,UAAU,aAAf,UACE,uBAAOI,QAAQ,aAAf,0BACA,uBACEC,KAAK,WACLL,UAAU,oBACVM,GAAG,aACHC,mBAAiB,WACjBC,UAAQ,EACRC,SAAU,SAAC1B,GAAD,OAAO8B,EAAW9B,EAAE2B,OAAOtC,UAEvC,uBAAOgC,QAAQ,aAAf,6BACA,uBACEC,KAAK,WACLL,UAAU,oBACVM,GAAG,aACHC,mBAAiB,WACjBC,UAAQ,EACRC,SAAU,SAAC1B,GAAD,OAAO+B,EAAc/B,EAAE2B,OAAOtC,aAG5C,wBAAQiC,KAAK,SAASL,UAAU,uBAAhC,sBAIF,qBAAKA,UAAU,QAAf,SACE,cAAC,IAAD,CAAMW,GAAI,mBAAoBX,UAAU,OAAxC,yCCsCGgB,MAnGf,WACE,IAAMC,EAAS1C,SAASC,cAAc,YAChC0C,EAAU3C,SAASC,cAAc,UACvC,EAAgCV,mBAAS,IAAzC,mBAAOqD,EAAP,KAAiBC,EAAjB,KACA,EAA0BtD,mBAAS,IAAnC,mBAAOY,EAAP,KAAcC,EAAd,KACA,EAAgCb,mBAAS,IAAzC,mBAAOuD,EAAP,KAAiBC,EAAjB,KACM1C,EAAUC,cAEVC,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACnBD,EAAEE,iBADiB,SAEGC,MACpB,mDACA,CACEC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAE6B,WAAUzC,QAAO2C,aACxC9B,QAAS,CAAE,eAAgB,sBAPZ,OAEbC,EAFa,OAUnBC,EAAOD,GAVY,2CAAH,sDAaZC,EAAS,SAACC,GACK,MAAfA,EAAID,QACNwB,EAAOtB,UAAUG,IAAI,UACrBoB,EAAQvB,UAAUC,OAAO,UACzBC,YAAW,WACTjB,EAAQmB,KAAK,OACZ,QAEHkB,EAAOtB,UAAUC,OAAO,UACxBsB,EAAQvB,UAAUG,IAAI,YAI1B,OACE,sBAAKE,UAAU,cAAf,UACE,mBAAGA,UAAU,QAAb,qBACA,qBAAKA,UAAU,cAAf,SACE,qBACEC,IAAI,qBACJD,UAAU,wBACVE,IAAI,gBAGR,sBAAKF,UAAU,YAAf,UACE,mBAAGA,UAAU,iBAAb,SACE,uBAAOA,UAAU,cAAjB,gEAIF,mBAAGA,UAAU,eAAb,SACE,uBAAOA,UAAU,eAAjB,wCAEF,uBAAMA,UAAU,aAAaG,SAAUrB,EAAvC,UACE,sBAAKkB,UAAU,aAAf,UACE,uBAAOI,QAAQ,gBAAf,uBACA,uBACEC,KAAK,OACLL,UAAU,oBACVM,GAAG,gBACHC,mBAAiB,WACjBC,UAAQ,EACRC,SAAU,SAAC1B,GAAD,OAAOqC,EAAYrC,EAAE2B,OAAOtC,aAG1C,sBAAK4B,UAAU,aAAf,UACE,uBAAOI,QAAQ,aAAf,mBACA,uBACEC,KAAK,QACLL,UAAU,oBACVM,GAAG,aACHC,mBAAiB,YACjBC,UAAQ,EACRC,SAAU,SAAC1B,GAAD,OAAOJ,EAASI,EAAE2B,OAAOtC,UAErC,uBAAOgC,QAAQ,gBAAf,sBACA,uBACEC,KAAK,WACLL,UAAU,oBACVM,GAAG,gBACHC,mBAAiB,WACjBC,UAAQ,EACRC,SAAU,SAAC1B,GAAD,OAAOuC,EAAYvC,EAAE2B,OAAOtC,aAG1C,wBAAQiC,KAAK,SAASL,UAAU,uBAAhC,yBAIF,qBAAKA,UAAU,QAAf,SACE,cAAC,IAAD,CAAMW,GAAI,IAAKX,UAAU,OAAzB,4BCRKuB,MAjFf,WACE,IAAMN,EAAS1C,SAASC,cAAc,YAChCgD,EAAWC,qBAAWhE,GAC5B,EAA0BK,mBAAS,IAAnC,mBAAOY,EAAP,KAAcC,EAAd,KACA,EAAgCb,mBAAS,IAAzC,mBAAOuD,EAAP,KAAiBC,EAAjB,KACM1C,EAAUC,cAEVC,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACnBD,EAAEE,iBADiB,SAEGC,MACpB,gDACA,CACEC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEZ,QAAO2C,aAC9B9B,QAAS,CAAE,eAAgB,sBAPZ,cAUI,OARjBC,EAFa,QAUPC,QAAgBb,EAAQmB,KAAK,cAVtB,SAWDP,EAAQkC,OAXP,OAWbhC,EAXa,OAYnB8B,EAASxD,YAAY0B,EAAIiC,MACzBH,EAAStD,aAAawB,EAAIhB,OAC1Be,EAAOD,GAdY,4CAAH,sDAiBZC,EAAS,SAACC,GACK,MAAfA,EAAID,OAAgBwB,EAAOtB,UAAUG,IAAI,UACxCmB,EAAOtB,UAAUC,OAAO,WAG/B,OACE,sBAAKI,UAAU,cAAf,UACE,mBAAGA,UAAU,QAAb,qBACA,qBAAKA,UAAU,YAAf,SACE,qBACEC,IAAI,mBACJD,UAAU,wBACVE,IAAI,gBAGR,sBAAKF,UAAU,YAAf,UACE,mBAAGA,UAAU,iBAAb,SACE,uBAAOA,UAAU,cAAjB,4CAEF,uBAAMA,UAAU,aAAaG,SAAUrB,EAAvC,UACE,sBAAKkB,UAAU,aAAf,UACE,uBAAOI,QAAQ,aAAf,8BACA,uBACEC,KAAK,QACLL,UAAU,oBACVM,GAAG,aACHC,mBAAiB,YACjBC,UAAQ,EACRC,SAAU,SAAC1B,GAAD,OAAOJ,EAASI,EAAE2B,OAAOtC,UAErC,uBAAOgC,QAAQ,gBAAf,sBACA,uBACEC,KAAK,WACLL,UAAU,oBACVM,GAAG,gBACHC,mBAAiB,WACjBC,UAAQ,EACRC,SAAU,SAAC1B,GAAD,OAAOuC,EAAYvC,EAAE2B,OAAOtC,aAG1C,wBAAQiC,KAAK,SAASL,UAAU,uBAAhC,sBAIF,sBAAKA,UAAU,QAAf,UACE,cAAC,IAAD,CAAMW,GAAI,mBAAoBX,UAAU,OAAxC,6BAGA,cAAC,IAAD,CAAMW,GAAI,YAAaX,UAAU,OAAjC,+BChBK4B,MAxDf,WACE,IAAMhD,EAAUC,cAChB,EAAgC4C,qBAAWhE,GAAnCM,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,UAGD,KAAbF,IACF8D,aAAaC,QAAQ,WAAY/D,GACjC8D,aAAaC,QAAQ,YAAa7D,IAEpC,IAAM8D,EAAUF,aAAaG,QAAQ,YAC/BC,EAAWJ,aAAaG,QAAQ,aAStC,OACE,qBAAKhC,UAAU,8CAAf,SACE,sBAAKA,UAAU,YAAf,UACE,uBAAMA,UAAU,eAAhB,sBAAyC+B,KACzC,wBACE/B,UAAU,iBACVK,KAAK,SACL6B,cAAY,WACZC,cAAY,0BACZC,gBAAc,yBACdC,gBAAc,QACdC,aAAW,oBAPb,SASE,sBAAMtC,UAAU,0BAElB,qBAAKA,UAAU,2BAA2BM,GAAG,yBAA7C,SACE,qBAAIN,UAAU,qBAAd,UACE,oBAAIA,UAAU,mBAAd,SACE,uBAAMA,UAAU,WAAhB,cAA6BiC,OAE/B,oBAAIjC,UAAU,WAAd,SACE,wBACEK,KAAK,SACLL,UAAU,qCACVM,GAAG,UACHiC,QA/BC,WACbV,aAAaC,QAAQ,WAAY,cACjCD,aAAaC,QAAQ,YAAa,IAClClD,EAAQmB,KAAK,MAwBH,mCCZCyC,MAtBf,WACE,OACE,cAAC,IAAD,UACE,cAAC,EAAD,UACE,qBAAKxC,UAAU,iBAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyC,OAAK,EAACC,KAAK,YAAYC,UAAW3B,IACzC,cAAC,IAAD,CAAOyB,OAAK,EAACC,KAAK,aAAaC,UAAWf,IAC1C,cAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,mBAAmBC,UAAWtE,IAChD,cAAC,IAAD,CACEqE,KAAK,uBACLC,UAAW/B,EACX6B,OAAO,IAET,cAAC,IAAD,CAAOA,OAAK,EAACC,KAAK,IAAIC,UAAWpB,cCZ9BqB,G,YAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCAdQ,IAASC,OAAO,cAAC,EAAD,IAAS/E,SAASgF,eAAe,SAKjDX,M","file":"static/js/main.4b682327.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nlet UserContext = React.createContext();\n\nexport default UserContext;\n\nexport const UserProvider = ({ children }) => {\n  const [username, setUserName] = useState(\"\");\n  const [useremail, setUserEmail] = useState(\"\");\n  return (\n    <UserContext.Provider\n      value={{ username, setUserName, useremail, setUserEmail }}\n    >\n      {children}\n    </UserContext.Provider>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nfunction ForgotPass() {\n  const invalidEmail = document.querySelector(\".invalid\");\n  const validEmail = document.querySelector(\".valid\");\n  const [email, setEmail] = useState(\"\");\n  const history = useHistory();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const connect = await fetch(\n      \"https://noderesetpassword.herokuapp.com/forgotpassword\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({ email }),\n        headers: { \"Content-type\": \"application/json\" },\n      }\n    );\n    status(connect);\n  };\n\n  const status = (res) => {\n    if (res.status === 200) {\n      validEmail.classList.remove(\"hidden\");\n      setTimeout(() => {\n        validEmail.classList.add(\"hidden\");\n        history.push(\"/\");\n      }, 4000);\n    } else {\n      invalidEmail.classList.remove(\"hidden\");\n      setTimeout(() => {\n        invalidEmail.classList.add(\"hidden\");\n      }, 1000);\n    }\n  };\n\n  return (\n    <div className=\"card card__\">\n      <span className=\"title\">Forgot Password?</span>\n      <div className=\"forgot-img\">\n        <img\n          src=\"/imgs/key.jpeg\"\n          className=\"card-img-top real-img\"\n          alt=\"forgotpassword-img\"\n        />\n      </div>\n\n      <div className=\"card-body\">\n        <p className=\"hidden invalid\">\n          <small className=\"text-danger\">\n            Invalid email. Please try again.\n          </small>\n        </p>\n        <p className=\"hidden valid\">\n          <small className=\"text-success\">\n            Please check your email to verify if it's really you.\n          </small>\n        </p>\n        <form className=\"reset-form\" onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"inputEmail\">Username / Email</label>\n            <input\n              type=\"email\"\n              className=\"form-control my-2\"\n              id=\"inputEmail\"\n              aria-describedby=\"emailHelp\"\n              required\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary my-2\">\n            Reset\n          </button>\n        </form>\n        <div className=\"links\">\n          <Link to={\"/\"} className=\"link\">\n            Sign in\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ForgotPass;\n","import React, { useState } from \"react\";\nimport { useParams, Link, useHistory } from \"react-router-dom\";\n\nfunction ResetPassword() {\n  const history = useHistory();\n  const [newpass, setNewpass] = useState(\"\");\n  const [repeatpass, setRepeatpass] = useState(\"\");\n  const handleSubmit = async (e) => {};\n  let { id } = useParams(); // This variable can be used as any other react element inside this function.\n\n  return (\n    <>\n      <h1>{id}</h1>\n      <div className=\"card card__\">\n        <p className=\"title\">Update Password</p>\n        <div className=\"reset-img\">\n          <img\n            src=\"/imgs/key.jpeg\"\n            className=\"card-img-top real-img\"\n            alt=\"reset-password-img\"\n          />\n        </div>\n        <div className=\"card-body\">\n          <p className=\"hidden invalid\">\n            <small className=\"text-danger\">\n              Password do not match. Please try again.\n            </small>\n          </p>\n          <p className=\"hidden valid\">\n            <small className=\"text-success\">\n              You have successfully registered your new password.\n            </small>\n          </p>\n          <p className=\"hidden unauthorized\">\n            <small className=\"text-danger\">\n              Unauthorized Access. Verify your email again.\n            </small>\n          </p>\n          <form className=\"reset-form\" onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"inputPass1\">New Password</label>\n              <input\n                type=\"password\"\n                className=\"form-control my-2\"\n                id=\"inputPass1\"\n                aria-describedby=\"passHelp\"\n                required\n                onChange={(e) => setNewpass(e.target.value)}\n              />\n              <label htmlFor=\"inputPass2\">Repeat Password</label>\n              <input\n                type=\"password\"\n                className=\"form-control my-2\"\n                id=\"inputPass2\"\n                aria-describedby=\"passHelp\"\n                required\n                onChange={(e) => setRepeatpass(e.target.value)}\n              />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary my-2\">\n              Reset\n            </button>\n          </form>\n          <div className=\"links\">\n            <Link to={\"/forgot-password\"} className=\"link\">\n              Forgot Password\n            </Link>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default ResetPassword;\n","import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nfunction RegisterUser() {\n  const danger = document.querySelector(\".invalid\");\n  const success = document.querySelector(\".valid\");\n  const [fullname, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const connect = await fetch(\n      \"https://noderesetpassword.herokuapp.com/register\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({ fullname, email, password }),\n        headers: { \"Content-type\": \"application/json\" },\n      }\n    );\n    status(connect);\n  };\n\n  const status = (res) => {\n    if (res.status === 200) {\n      danger.classList.add(\"hidden\");\n      success.classList.remove(\"hidden\");\n      setTimeout(() => {\n        history.push(\"/\");\n      }, 1500);\n    } else {\n      danger.classList.remove(\"hidden\");\n      success.classList.add(\"hidden\");\n    }\n  };\n\n  return (\n    <div className=\"card card__\">\n      <p className=\"title\">Sign-up</p>\n      <div className=\"welcome-img\">\n        <img\n          src=\"/imgs/welcome.jpeg\"\n          className=\"card-img-top real-img\"\n          alt=\"login-img\"\n        />\n      </div>\n      <div className=\"card-body\">\n        <p className=\"hidden invalid\">\n          <small className=\"text-danger\">\n            User already registered. You may try logging in.\n          </small>\n        </p>\n        <p className=\"hidden valid\">\n          <small className=\"text-success\">Successfully registered.</small>\n        </p>\n        <form className=\"reset-form\" onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"inputFullName\">Full Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control my-2\"\n              id=\"inputFullName\"\n              aria-describedby=\"fullName\"\n              required\n              onChange={(e) => setFullName(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"inputEmail\">Email</label>\n            <input\n              type=\"email\"\n              className=\"form-control my-2\"\n              id=\"inputEmail\"\n              aria-describedby=\"emailHelp\"\n              required\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <label htmlFor=\"inputPassword\">Password</label>\n            <input\n              type=\"password\"\n              className=\"form-control my-2\"\n              id=\"inputPassword\"\n              aria-describedby=\"passHelp\"\n              required\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary my-2\">\n            Register\n          </button>\n        </form>\n        <div className=\"links\">\n          <Link to={\"/\"} className=\"link\">\n            Login\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default RegisterUser;\n","import React, { useContext, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport UserContext from \"../UserContext\";\n\nfunction UserLogin() {\n  const danger = document.querySelector(\".invalid\");\n  const userInfo = useContext(UserContext);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const connect = await fetch(\n      \"https://noderesetpassword.herokuapp.com/login\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({ email, password }),\n        headers: { \"Content-type\": \"application/json\" },\n      }\n    );\n    if (connect.status === 200) history.push(\"/dashboard\");\n    const res = await connect.json();\n    userInfo.setUserName(res.name);\n    userInfo.setUserEmail(res.email);\n    status(connect);\n  };\n\n  const status = (res) => {\n    if (res.status === 200) danger.classList.add(\"hidden\");\n    else danger.classList.remove(\"hidden\");\n  };\n\n  return (\n    <div className=\"card card__\">\n      <p className=\"title\">Sign-in</p>\n      <div className=\"login-img\">\n        <img\n          src=\"/imgs/hello.jpeg\"\n          className=\"card-img-top real-img\"\n          alt=\"login-img\"\n        />\n      </div>\n      <div className=\"card-body\">\n        <p className=\"hidden invalid\">\n          <small className=\"text-danger\">Invalid username or password</small>\n        </p>\n        <form className=\"reset-form\" onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"inputEmail\">Username / Email</label>\n            <input\n              type=\"email\"\n              className=\"form-control my-2\"\n              id=\"inputEmail\"\n              aria-describedby=\"emailHelp\"\n              required\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <label htmlFor=\"inputPassword\">Password</label>\n            <input\n              type=\"password\"\n              className=\"form-control my-2\"\n              id=\"inputPassword\"\n              aria-describedby=\"passHelp\"\n              required\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary my-2\">\n            Login\n          </button>\n        </form>\n        <div className=\"links\">\n          <Link to={\"/forgot-password\"} className=\"link\">\n            Forgot Password\n          </Link>\n          <Link to={\"/register\"} className=\"link\">\n            Sign up\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default UserLogin;\n","import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport UserContext from \"../UserContext\";\n\nfunction Dashboard() {\n  const history = useHistory();\n  const { username, useremail } = useContext(UserContext);\n\n  // Log in\n  if (username !== \"\") {\n    localStorage.setItem(\"username\", username);\n    localStorage.setItem(\"useremail\", useremail);\n  }\n  const getName = localStorage.getItem(\"username\");\n  const getEmail = localStorage.getItem(\"useremail\");\n\n  // log out\n  const logOut = () => {\n    localStorage.setItem(\"username\", \"Guest User\");\n    localStorage.setItem(\"useremail\", \"\");\n    history.push(\"/\");\n  };\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <div className=\"container\">\n        <span className=\"navbar-brand\">Welcome, {getName}</span>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item active \">\n              <span className=\"nav-link\"> {getEmail}</span>\n            </li>\n            <li className=\"nav-item\">\n              <button\n                type=\"button\"\n                className=\"nav-link text-white btn btn-danger\"\n                id=\"signout\"\n                onClick={logOut}\n              >\n                Sign out\n              </button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { UserProvider } from \"./UserContext\";\nimport ForgotPass from \"./components/ForgotPass\";\nimport ResetPassword from \"./components/ResetPass\";\nimport RegisterUser from \"./components/Register\";\nimport UserLogin from \"./components/UserLogin\";\nimport Dashboard from \"./components/Dashboard\";\nimport NotFound from \"./components/NotFound\";\n\nfunction App() {\n  return (\n    <Router>\n      <UserProvider>\n        <div className=\"container px-0\">\n          <Switch>\n            <Route exact path=\"/register\" component={RegisterUser}></Route>\n            <Route exact path=\"/dashboard\" component={Dashboard}></Route>\n            <Route exact path=\"/forgot-password\" component={ForgotPass}></Route>\n            <Route\n              path=\"/reset/:randomstring\"\n              component={ResetPassword}\n              exact={true}\n            ></Route>\n            <Route exact path=\"/\" component={UserLogin}></Route>\n          </Switch>\n        </div>\n      </UserProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}